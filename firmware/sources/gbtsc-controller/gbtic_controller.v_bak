/* 
       _________   ________     ________       
      / U OF M  \ | LSA    \   / Physics\
      \__ATLAS__/ |   ___   | |   ______/
         |   |    |  |   \  | |  |
         |   |    |  |___/  | |  \______     
         |   |    |         | |         \
         \___/    |________/   \________/
*/  

// Author : Yuxiang Guo  gyuxiang@umich.edu
// File   : gbtic_controller.v
// Create : 2021-06-27 22:32:48
// Revise : 2021-06-27 22:55:09
// Editor : sublime text3, tab size (4)
// Description: 
//
// -----------------------------------------------------------------------------

module gbtic_controller
(
    input clk,
    input rst,

    input ic_ready,
    input ic_empty,
    
    //configuration
    output [7:0] GBTx_address,
    output [15:0] Register_addr,
    output [15:0] nb_to_be_read,

    //control
    output ic_wr_start,
    output ic_rd_start,

    //write to internal ic FIFO
    output [7:0] ic_wfifo_data,
    output ic_fifo_wr,

    //read from internal ic FIFO
    input [7:0] ic_rfifo_data,
    output ic_fifo_rd,

    //uart interface
    input  rxd,
    output txd
);




wire command_fifo_read,command_fifo_empty,data_back_wr;
wire [159:0] command,data_back;



assign nb_to_be_read [15:8] = 'b0;

UART_interface UART_interface_inst
(
   .clk40                (clk),
   .reset                (rst),
   .rxd                  (rxd),
   .txd                  (txd),
   .command_fifo_rd_en   (command_fifo_read),
   .command              (command),
   .command_fifo_empty   (command_fifo_empty),
   .ic_rfifo_data        (ic_rfifo_data),
   .ic_fifo_rd           (ic_fifo_rd),
   .ic_rfifo_empty       (ic_empty)
);





command_resolve command_resolve_inst
(
    .clk                (clk),
    .rst                (rst),
    .command            (command),
    .command_fifo_empty (command_fifo_empty),
    .command_fifo_read  (command_fifo_read),
    .data_back          (data_back),
    .data_back_wr       (data_back_wr),
    .GBTx_address       (GBTx_address),
    .Register_addr      (Register_addr),
    .nb_to_be_read      (nb_to_be_read[7:0]),
    .ic_wr_start        (ic_wr_start),
    .ic_rd_start        (ic_rd_start),
    .ic_wfifo_data      (ic_wfifo_data),
    .ic_fifo_wr         (ic_fifo_wr)
);


// vio_gbtic_controller vio_gbtic_controller_inst (
//     .clk(clk),                // input wire clk

//     .probe_in0(ic_ready),    // input wire [0 : 0] probe_in0
//     .probe_in1(ic_empty),    // input wire [0 : 0] probe_in1
//     .probe_in2(data_i),    // input wire [7 : 0] probe_in2
//     .probe_in3(rd_gbtx_addr),    // input wire [7 : 0] probe_in3
//     .probe_in4(rd_mem_ptr),    // input wire [15 : 0] probe_in4
//     .probe_in5(rd_nb_of_words),    // input wire [15 : 0] probe_in5

//     .probe_out0(GBTx_address),  // output wire [7 : 0] probe_out0
//     .probe_out1(Register_addr),  // output wire [15 : 0] probe_out1
//     .probe_out2(nb_to_be_read),  // output wire [15 : 0] probe_out2
//     .probe_out3(write_ic_vio),  // output wire [0 : 0] probe_out3
//     .probe_out4(read_ic_vio),  // output wire [0 : 0] probe_out4
//     .probe_out5(data_o),  // output wire [7 : 0] probe_out5
//     .probe_out6(write_fifo_vio),  // output wire [0 : 0] probe_out6
//     .probe_out7(read_fifo_vio)  // output wire [0 : 0] probe_out7
// );


// ila_gbtic_controller ila_gbtic_controller_inst (
//     .clk(clk), // input wire clk

//     .probe0(rxd), // input wire [0:0]  probe0  
//     .probe1(txd), // input wire [0:0]  probe1 
//     .probe2(command_fifo_read), // input wire [0:0]  probe2 
//     .probe3(command), // input wire [159:0]  probe3 
//     .probe4(command_fifo_empty), // input wire [0:0]  probe4 
//     .probe5(GBTx_address), // input wire [7:0]  probe5 
//     .probe6(Register_addr), // input wire [15:0]  probe6 
//     .probe7(nb_to_be_read[7:0]), // input wire [7:0]  probe7 
//     .probe8(ic_wr_start), // input wire [0:0]  probe8 
//     .probe9(ic_rd_start), // input wire [0:0]  probe9 
//     .probe10(ic_wfifo_data), // input wire [7:0]  probe10 
//     .probe11(ic_fifo_wr), // input wire [0:0]  probe11 
//     .probe12(ic_rfifo_data), // input wire [7:0]  probe12 
//     .probe13(ic_fifo_rd) // input wire [0:0]  probe13
// );


endmodule
